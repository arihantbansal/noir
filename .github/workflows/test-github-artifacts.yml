name: Test github artifacts

on:
  push:
    branches:
      # - 'master'
      - 'cache-docker-artifacts'

jobs:
  build:
    name: Test github artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_STATE
      - name: prepare docker images tags
        id: prep
        run: |
          REGISTRY="ghcr.io"
          IMG="${REGISTRY}/${{ github.repository }}"
          IMAGE=$(echo "$IMG" | tr '[:upper:]' '[:lower:]')
          TAGS="${IMAGE}:${{ github.sha }}"
          TAGS="${TAGS},${IMAGE}:latest,${IMAGE}:v${{ steps.date.outputs.date }}"
          # echo ::set-output name=tags::${TAGS}
          echo "tags=$TAGS" >> $GITHUB_OUTPUT
          echo "image=$IMAGE" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry        
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Test cargo
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.ci
          tags: ${{ steps.prep.outputs.tags }}
          target: test-base
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true
      - name: run image
        run: |
          id=$(docker create ${{ steps.prep.outputs.image }}:latest)
          sudo docker cp $id:/usr/src/noir/target /dist
          sudo docker cp $id:/usr/local/cargo /cargo
          sudo docker rm -v $id
      - name: tar
        run: |
          sudo tar -czvf /dist.tar.gz /dist
          sudo tar -czvf /cargo.tar.gz /cargo
      - name: test-cache
        uses: actions/cache/save@v3
        with:
          path: |
            /dist.tar.gz
            /cargo.tar.gz
          key: ${{ runner.os }}-docker-artifact-cache